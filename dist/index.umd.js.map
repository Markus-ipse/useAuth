{"version":3,"file":"index.umd.js","sources":["../src/authReducer.ts","../src/useAuth.ts","../src/AuthProvider.tsx"],"sourcesContent":["export const authReducer = (state, action) => {\n    switch (action.type) {\n        case \"login\":\n            const { authResult, user } = action;\n            const expiresAt =\n                authResult.expiresIn * 1000 + new Date().getTime();\n\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt));\n                localStorage.setItem(\"user\", JSON.stringify(user));\n            }\n\n            return {\n                user,\n                expiresAt,\n                checkingSession: false\n            };\n        case \"logout\":\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.removeItem(\"expires_at\");\n                localStorage.removeItem(\"user\");\n            }\n\n            return {\n                user: {},\n                expiresAt: null\n            };\n        case \"error\":\n            const { errorType, error } = action;\n            return {\n                user: {},\n                expiresAt: null,\n                errorType,\n                error,\n                checkingSession: false\n            };\n        default:\n            return state;\n    }\n};\n","import Auth0 from \"auth0-js\";\nimport React, { useCallback, useContext } from \"react\";\nimport { AuthContext } from \"./AuthProvider\";\n\nasync function setSession({ dispatch, auth0, authResult }) {\n    return new Promise((resolve, reject) => {\n        auth0.client.userInfo(authResult.accessToken, (err, user) => {\n            if (err) {\n                dispatch({\n                    type: \"error\",\n                    errorType: \"userInfo\",\n                    error: err\n                });\n                reject(err);\n            } else {\n                dispatch({\n                    type: \"login\",\n                    authResult,\n                    user\n                });\n                resolve(user);\n            }\n        });\n    });\n}\n\nexport interface HandleAuthResultArgs {\n    err?: any;\n    dispatch: React.Dispatch<any>;\n    auth0: Auth0.WebAuth;\n    authResult: any;\n}\n\nexport const handleAuthResult = async ({\n    err,\n    dispatch,\n    auth0,\n    authResult\n}: HandleAuthResultArgs) => {\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        await setSession({ dispatch, auth0, authResult });\n\n        return true;\n    } else if (err) {\n        console.error(err);\n        dispatch({\n            type: \"error\",\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    }\n};\n\nexport const useAuth = () => {\n    const { state, dispatch, auth0, callback_domain, navigate } = useContext(\n        AuthContext\n    );\n\n    const login = () => {\n        console.log(\"login()\");\n\n        auth0.authorize();\n    };\n\n    const logout = () => {\n        auth0.logout({\n            returnTo: callback_domain\n        });\n        dispatch({\n            type: \"logout\"\n        });\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = useCallback(\n        ({ postLoginRoute = \"/\" }: HandleAuthArg = {}) => {\n            if (typeof window !== \"undefined\") {\n                auth0.parseHash(async (err, authResult) => {\n                    console.log(err, authResult);\n\n                    await handleAuthResult({\n                        err,\n                        authResult,\n                        dispatch,\n                        auth0\n                    });\n\n                    navigate(postLoginRoute);\n                });\n            }\n        },\n        []\n    );\n\n    const isAuthenticated = () => {\n        return state.expiresAt && new Date().getTime() < state.expiresAt;\n    };\n\n    return {\n        isAuthenticated,\n        user: state.user,\n        userId: state.user ? state.user.sub : null,\n        login,\n        logout,\n        handleAuthentication,\n        checkingSession: state.checkingSession\n    };\n};\n\nexport interface HandleAuthArg {\n    postLoginRoute?: string | null;\n}\n","import Auth0, { AuthOptions } from \"auth0-js\";\nimport React, { createContext, useEffect, useReducer } from \"react\";\nimport { authReducer } from \"./authReducer\";\nimport { handleAuthResult } from \"./useAuth\";\n\nexport const AuthContext = createContext(null);\n\ninterface Props {\n    navigate: (url: string) => void;\n    auth0_domain: string;\n    auth0_client_id: string;\n    auth0_params: Omit<AuthOptions, \"domain\" | \"clientID\">;\n}\n\nexport const AuthProvider: React.FC<Props> = ({\n    children,\n    navigate,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params\n}) => {\n    const callback_domain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const params = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callback_domain}/auth0_callback`,\n        audience: `https://${auth0_domain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n\n    const [state, dispatch] = useReducer(authReducer, {\n        user: {},\n        expiresAt: null,\n        checkingSession: true\n    });\n\n    useEffect(() => {\n        auth0.checkSession({}, (err, authResult) => {\n            console.log(\"checkSession\", err, authResult);\n\n            if (err) {\n                dispatch({\n                    type: \"error\",\n                    errorType: \"checkSession\",\n                    error: err\n                });\n            } else {\n                handleAuthResult({ dispatch, auth0, authResult });\n            }\n        });\n    }, []);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                state,\n                dispatch,\n                auth0,\n                callback_domain,\n                navigate\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"names":["authReducer","state","action","type","expiresAt","expiresIn","Date","getTime","localStorage","setItem","JSON","stringify","user","checkingSession","removeItem","handleAuthResult","ref","authResult","accessToken","idToken","Promise","resolve","reject","auth0","client","userInfo","err","dispatch","errorType","error","setSession","console","AuthContext","createContext","callback_domain","window","location","Auth0","WebAuth","Object","domain","auth0_domain","clientID","redirectUri","audience","responseType","scope","useReducer","useEffect","checkSession","log","React","Provider","value","navigate","children","useContext","handleAuthentication","useCallback","parseHash","postLoginRoute","userId","sub","authorize","logout","returnTo"],"mappings":"2UAAaA,WAAeC,EAAOC,UACvBA,EAAOC,UACN,qBAEKC,EACqB,iBAAZC,WAAmB,IAAIC,MAAOC,gBAEjB,oBAAjBC,eACPA,aAAaC,QAAQ,aAAcC,KAAKC,UAAUP,IAClDI,aAAaC,QAAQ,OAAQC,KAAKC,UAAUC,KAGzC,MACHA,YACAR,EACAS,iBAAiB,OAEpB,eAC2B,oBAAjBL,eACPA,aAAaM,WAAW,cACxBN,aAAaM,WAAW,SAGrB,CACHF,KAAM,GACNR,UAAW,UAEd,cAEM,CACHQ,KAAM,GACNR,UAAW,yCAGXS,iBAAiB,kBAGdZ,ICJNc,WAA0BC,gFAM/BC,GAAcA,EAAWC,aAAeD,EAAWE,iCAnCjCH,wEACf,IAAII,iBAASC,EAASC,GACzBC,EAAMC,OAAOC,SAASR,EAAWC,qBAAcQ,EAAKd,GAC5Cc,GACAC,EAAS,CACLxB,KAAM,QACNyB,UAAW,WACXC,MAAOH,IAEXJ,EAAOI,KAEPC,EAAS,CACLxB,KAAM,mBACNc,OACAL,IAEJS,EAAQT,4CAoBVkB,CAAW,UAAEH,QAAUJ,aAAON,4BAE7B,IACAS,GACPK,QAAQF,MAAMH,GACdC,EAAS,CACLxB,KAAM,QACN0B,MAAOH,EACPE,UAAW,gBAGR,QARJ,uCCtCEI,EAAcC,gBAAc,8BASKjB,kDAOpCkB,EACgB,oBAAXC,OACEA,OAAOC,uBAAsBD,OAAOC,cACvC,wBAWJb,EAAQ,IAAIc,EAAMC,QAAQC,iBATjB,CACXC,OAAQC,EACRC,2BACAC,YAAgBT,oBAChBU,oBAAqBH,aACrBI,aAAc,iBACdC,MAAO,2CAKeC,aAAW/C,EAAa,CAC9CY,KAAM,GACNR,UAAW,KACXS,iBAAiB,yBAGrBmC,uBACIzB,EAAM0B,aAAa,YAAKvB,EAAKT,GACzBc,QAAQmB,IAAI,eAAgBxB,EAAKT,GAE7BS,EACAC,EAAS,CACLxB,KAAM,QACNyB,UAAW,eACXC,MAAOH,IAGXX,EAAiB,UAAEY,QAAUJ,aAAON,OAG7C,IAGCkC,gBAACnB,EAAYoB,UACTC,MAAO,OACHpD,WACA0B,QACAJ,kBACAW,WACAoB,IAGHC,+BDbqDC,aAC1DxB,qEAqBEyB,EAAuBC,uBACxB1C,kBAA0C,0CAAvB,KACM,oBAAXmB,QACPZ,EAAMoC,mBAAiBjC,EAAKT,cACxBc,QAAQmB,IAAIxB,EAAKT,mBAEXF,EAAiB,KACnBW,aACAT,WACAU,QACAJ,qBAGJ+B,EAASM,2CAIrB,UAOG,mCAHI3D,EAAMG,YAAa,IAAIE,MAAOC,UAAYN,EAAMG,WAKvDQ,KAAMX,EAAMW,KACZiD,OAAQ5D,EAAMW,KAAOX,EAAMW,KAAKkD,IAAM,sBA5CtC/B,QAAQmB,IAAI,WAEZ3B,EAAMwC,+BAINxC,EAAMyC,OAAO,CACTC,SAAU/B,IAEdP,EAAS,CACLxB,KAAM,WAIVmD,EAAS,2BAiCTG,EACA5C,gBAAiBZ,EAAMY"}